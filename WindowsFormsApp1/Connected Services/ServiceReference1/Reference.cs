//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/C2f", ReplyAction="http://tempuri.org/IService1/C2fResponse")]
        int C2f(int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/C2f", ReplyAction="http://tempuri.org/IService1/C2fResponse")]
        System.Threading.Tasks.Task<int> C2fAsync(int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/F2c", ReplyAction="http://tempuri.org/IService1/F2cResponse")]
        int F2c(int f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/F2c", ReplyAction="http://tempuri.org/IService1/F2cResponse")]
        System.Threading.Tasks.Task<int> F2cAsync(int f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sortNums", ReplyAction="http://tempuri.org/IService1/sortNumsResponse")]
        string sortNums(string nums);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/sortNums", ReplyAction="http://tempuri.org/IService1/sortNumsResponse")]
        System.Threading.Tasks.Task<string> sortNumsAsync(string nums);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/encrypt", ReplyAction="http://tempuri.org/IService1/encryptResponse")]
        string encrypt(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/encrypt", ReplyAction="http://tempuri.org/IService1/encryptResponse")]
        System.Threading.Tasks.Task<string> encryptAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/decrypt", ReplyAction="http://tempuri.org/IService1/decryptResponse")]
        string decrypt(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/decrypt", ReplyAction="http://tempuri.org/IService1/decryptResponse")]
        System.Threading.Tasks.Task<string> decryptAsync(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApp1.ServiceReference1.IService1>, WindowsFormsApp1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int C2f(int c) {
            return base.Channel.C2f(c);
        }
        
        public System.Threading.Tasks.Task<int> C2fAsync(int c) {
            return base.Channel.C2fAsync(c);
        }
        
        public int F2c(int f) {
            return base.Channel.F2c(f);
        }
        
        public System.Threading.Tasks.Task<int> F2cAsync(int f) {
            return base.Channel.F2cAsync(f);
        }
        
        public string sortNums(string nums) {
            return base.Channel.sortNums(nums);
        }
        
        public System.Threading.Tasks.Task<string> sortNumsAsync(string nums) {
            return base.Channel.sortNumsAsync(nums);
        }
        
        public string encrypt(string text) {
            return base.Channel.encrypt(text);
        }
        
        public System.Threading.Tasks.Task<string> encryptAsync(string text) {
            return base.Channel.encryptAsync(text);
        }
        
        public string decrypt(string text) {
            return base.Channel.decrypt(text);
        }
        
        public System.Threading.Tasks.Task<string> decryptAsync(string text) {
            return base.Channel.decryptAsync(text);
        }
    }
}
